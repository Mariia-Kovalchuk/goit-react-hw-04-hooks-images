{"version":3,"sources":["Modal/Modal.module.css","ImageGalleryItem/ImageGalleryItem.module.css","Button/Button.module.css","Searchbar/Searchbar.js","apiSearchService.js","ImageGalleryItem/ImageGalleryItem.js","Modal/Modal.js","Button/Button.js","ImageGallery/ImageGallery.js","App.js","index.js","Searchbar/Searchbar.module.css","ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleSearchQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","error","text","delay","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","placeholder","onChange","Component","api","fetchSearchQuery","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","img","webformatURL","largeImageURL","onClick","style","src","alt","ImageGalleryItemImage","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","Img","url","Button","Status","ImageGallery","status","searchQueryResult","showModal","modalImgUrl","total","listRef","React","createRef","handleFormSubmit","apiSearchService","prevState","hits","catch","toggleModal","handleImgURL","handleImgClick","dataset","source","prevProps","length","list","current","scrollHeight","scrollTop","snapshot","scrollTo","top","behavior","Loader","color","height","width","timeout","ref","map","id","ErrorQuery","message","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fbdf488.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3wqoS\",\"Modal\":\"Modal_Modal__2fOfz\",\"Img\":\"Modal_Img__2cCyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__HK81A\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3TT-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__37mpG\"};","import { Component } from 'react';\r\nimport styles from './Searchbar.module.css';\r\nimport { error } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Searchbar extends Component{\r\n    state = {\r\n        searchQuery: ''\r\n        \r\n    };\r\n\r\n    handleSearchQueryChange = event => {\r\n        this.setState({ searchQuery: event.currentTarget.value.toLowerCase()})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.state.searchQuery.trim() === '') {\r\n            error({\r\n                  text: \"Please enter your search query!\",\r\n                  delay: 2000,\r\n              });\r\n              return\r\n        };\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className={styles.Searchbar}>\r\n                <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className={styles.SearchFormButton}>\r\n                        <span className={styles.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={styles.SearchFormInput}\r\n                        type=\"text\"\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleSearchQueryChange}\r\n                        value={this.state.searchQuery}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n}","// с дефолтным экспортом объекта отвечающего за логику HTTP-запросов к API\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '21191808-b7f611822e153568a8c55fc05';\r\n\r\nfunction fetchSearchQuery( searchQuery, page ) {\r\n    return fetch(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`)\r\n        .then(response => {\r\n    if (response.ok) {\r\n        return response.json();\r\n            };\r\n\r\n    return Promise.reject(new Error(`No match found. Please check your query!`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchSearchQuery,\r\n};\r\n\r\nexport default api;\r\n\r\n\r\n\r\n// export default class ApiService {\r\n//     constructor() {\r\n//     this.searchQuery = '';\r\n//         this.page = 1;\r\n//         this.total = 0;\r\n//     }\r\n\r\n//     search() {\r\n        \r\n//         return fetch(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=12&key=${API_KEY}`)\r\n//             .then(response => response.json())\r\n//             .then(({ hits, total }) => {\r\n//                 this.total = total;\r\n//                 return hits;\r\n//             }\r\n//             );\r\n//     }\r\n\r\n\r\n//     set query(newQuery) {\r\n//         this.searchQuery = newQuery;\r\n//     }\r\n\r\n\r\n//     incrementPage() {\r\n//         this.page+=1;\r\n//     }\r\n\r\n//     resetPage() {\r\n//     this.page = 1;\r\n//   }\r\n\r\n\r\n    \r\n// }","import style from './ImageGalleryItem.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default function ImageGalleryItem({ img: { webformatURL, largeImageURL }, onClick}) {\r\n  return (\r\n   <li className={style.ImageGalleryItem}>\r\n  <img src={webformatURL} alt=\"\" className={style.ImageGalleryItemImage} onClick={onClick} data-source={largeImageURL} />\r\n</li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  img: PropTypes.object.isRequired\r\n  \r\n}","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport style from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return createPortal(\r\n          <div className={style.Overlay} onClick={this.handleBackdropClick}>\r\n              <div className={style.Modal}>\r\n                  <img className={style.Img} src={this.props.url} alt=\"\"  />\r\n              </div>\r\n          </div>,\r\n          modalRoot,\r\n      );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  url: PropTypes.string.isRequired\r\n\r\n}\r\n\r\n\r\n","import style from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <button type=\"button\" className={style.Button} onClick={onClick} > Load More\r\n        </button>\r\n        \r\n    );\r\n}\r\n\r\nexport default Button\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n}","import React, {Component} from 'react';\r\nimport styles from './ImageGallery.module.css';\r\nimport Searchbar from '../Searchbar';\r\nimport apiSearchService from '../apiSearchService';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../Modal';\r\nimport Button from '../Button';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nclass ImageGallery extends Component{\r\n\r\n    state = {\r\n        searchQuery: '',\r\n        page: 1,\r\n        status: Status.IDLE,\r\n        searchQueryResult: [],\r\n        showModal: false,\r\n        modalImgUrl: null,\r\n        total: null,\r\n        error: null\r\n\r\n    }\r\n    listRef = React.createRef()\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    // Are we adding new items to the list?\r\n    // Capture the scroll position so we can adjust scroll later.\r\n    if (prevState.searchQueryResult.length < this.state.searchQueryResult.length) {\r\n        const list = this.listRef.current;\r\n        return list.scrollHeight - list.scrollTop;\r\n          };\r\n          return null;\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const prevSearchQuery = prevState.searchQuery;\r\n        const nextSearchQuery = this.state.searchQuery;\r\n\r\n        if (prevSearchQuery !== nextSearchQuery) {\r\n            this.setState({ status: Status.PENDING});\r\n            this.fetchSearchQuery()\r\n        };\r\n\r\n        if (snapshot !== null) {\r\n            window.scrollTo({\r\n        top: snapshot,\r\n        behavior: 'smooth',\r\n      });\r\n        };\r\n    };\r\n\r\n    handleFormSubmit = searchQuery => {\r\n        this.setState({ searchQuery, page:1, searchQueryResult: [] });\r\n    };\r\n\r\n    fetchSearchQuery = () => {\r\n        const { searchQuery, page } = this.state;\r\n        apiSearchService\r\n            .fetchSearchQuery(searchQuery, page)\r\n            .then(searchQueryResult => {\r\n                this.setState(prevState => ({ searchQueryResult: [...prevState.searchQueryResult, ...searchQueryResult.hits], status: Status.RESOLVED, page: prevState.page+1, total: searchQueryResult.total }))\r\n            })\r\n            .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n    };\r\n\r\n\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n            showModal: !showModal,\r\n        }));\r\n    };\r\n    \r\n    handleImgURL = modalImgUrl => {\r\n        this.setState({ modalImgUrl });\r\n    };\r\n\r\n    handleImgClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            const largeImageURL = event.target.dataset.source;\r\n            this.handleImgURL(largeImageURL)\r\n            this.toggleModal()\r\n        }\r\n          \r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { searchQueryResult, status, error, modalImgUrl, showModal, total, page } = this.state;\r\n\r\n        return (\r\n            <div >\r\n                < Searchbar onSubmit={this.handleFormSubmit} />\r\n\r\n                {status === 'pending' && <Loader className={styles.Loader} type=\"Circles\" color=\"#3f51b5\" height={100} width={100} timeout={5000} />}\r\n\r\n                <div ref={this.listRef}>\r\n                    {status === 'resolved' && searchQueryResult.length > 0 &&\r\n                        <div >\r\n                            <ul className={styles.ImageGallery}>\r\n                                {searchQueryResult.map(img => (\r\n                                    <ImageGalleryItem onClick={this.handleImgClick} key={img.id} img={img} />\r\n                                ))}\r\n                            </ul>\r\n\r\n                            {total > (page - 1) * 12 && (<Button onClick={this.fetchSearchQuery} />)}\r\n               \r\n                            {showModal && <Modal onClose={this.toggleModal} url={modalImgUrl} />}\r\n\r\n                        </div>}\r\n                </div>\r\n                \r\n                {status === 'resolved' && !searchQueryResult.length &&\r\n                    <p className={styles.ErrorQuery}>No match found. Please check your query!</p>}\r\n                \r\n                {status === 'rejected' && <p className={styles.ErrorQuery}>{error.message}</p>}\r\n                           \r\n\r\n            </div>\r\n            \r\n        );\r\n        \r\n    };\r\n}\r\n\r\nexport default ImageGallery;","import React from 'react';\nimport ImageGallery from './ImageGallery'\n\n\n\nconst App = () => {\n    return (\n        < ImageGallery />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__33-hi\",\"SearchForm\":\"Searchbar_SearchForm__11k0g\",\"SearchFormButton\":\"Searchbar_SearchFormButton__UVEjy\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1l2z3\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1ckXN\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3INw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__LBHuI\",\"ErrorQuery\":\"ImageGallery_ErrorQuery__12dmj\",\"Loader\":\"ImageGallery_Loader__1VuSq\"};"],"sourceRoot":""}